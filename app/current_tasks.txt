The current tasks are to:

TRAINING

-Unit Test activities and fragments and then create them
-try and use the livedata to store data
-See hw do we even unit test things that use rxjava

Find a unit test for
-Creation of a fragment - top priority
-Fragment lifecycle
-Creation of an activity
-Activity lifecycle
-Execution of an intent
-Mocking API call
-A service with a short timeline
-A service sped up

Instrumentation testing
-Item position testing
-real component loaded testing

REAL APP DEVELOPMENT

-position elements  a bit better
-put the correct progress bar

-activity transitioning and unit testing.
-mocking out api call to redirect

-live data store within android
-usage of that local data store to interact with data and UI attributes

Check out some reports and logging on user interactions. Each action the user takes ideally would be in the form
of some attribute that can be built into a json tree and parsed later on a post-generate report.
i.e.
{
    pageLeft:"calorie_report",
    timeOnPage:"5s"
}
as the most basic example. would be kind of a mix of rx and redux style to snowball nice simple
user interaction objects. again rx in high demand.

RELEASE OF APP

Deploy it live and tweak endpoints and stuff
Facebook pages and connect to the website
Improve marketing
Updating of the user experience to something a bit better nad more intelligent
Look at live examples and snake a few cool features and components and animations to engage
and keep engaged

Embed it into

I like a progress bar select. Keeping the whole thing circles with cool shit for animations

Once that is done, you put up a few ads and let it run itself and let the feedback be the first priority, and
the user interaction be a big priority. Easy to toss a few features a month you see on other apps
or practicing a new style with a new feature. Should be fair to assume this low 5 hour per month
to support 500k active users, and let serverless, analytics, auto-marketing sort itself, and just
keep the eye on the numbers like stocks and collect the cheque in the mail every month (1500 per app)


That is of course the strategy, for each app. The first apps may SUCK, but that wont change the feedback
loop being the straight shot to success. The more power I have on the side of development, the quicker that feedback
becomes good. Tests should start it clean though.


Also would be a cool to make Zop!

